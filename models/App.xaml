<Application x:Class="AimmyWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--#region Material Main Hues  -->
            <SolidColorBrush x:Key="PrimaryHueLightBrush"
                             Color="#FF141414" />
            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush"
                             Color="White" />
            <SolidColorBrush x:Key="PrimaryHueMidBrush"
                             Color="#FF141414" />
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush"
                             Color="White" />
            <SolidColorBrush x:Key="PrimaryHueDarkBrush"
                             Color="#FF141414" />
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush"
                             Color="White" />
            <!--#endregion-->
            <!--#region Material Accent -->
            <SolidColorBrush x:Key="SecondaryAccentBrush"
                             Color="#FF141414" />
            <SolidColorBrush x:Key="SecondaryAccentForegroundBrush"
                             Color="White" />
            <!--#endregion-->
            <!--#region ScrollBar-->
            <SolidColorBrush Color="Transparent"
                             x:Key="ScrollBar.Static.Background" />
            <SolidColorBrush Color="#ffffff"
                             x:Key="ScrollBar.Pressed.Glyph" />
            <SolidColorBrush Color="#a0a0a0"
                             x:Key="ScrollBar.MouseOver.Glyph" />
            <SolidColorBrush Color="#404040"
                             x:Key="ScrollBar.Disabled.Glyph" />
            <SolidColorBrush Color="#808080"
                             x:Key="ScrollBar.Static.Glyph" />
            <SolidColorBrush Color="#303030"
                             x:Key="ScrollBar.MouseOver.Background" />
            <SolidColorBrush Color="#404040"
                             x:Key="ScrollBar.Pressed.Background" />
            <SolidColorBrush Color="#191919"
                             x:Key="ScrollBar.Disabled.Background" />
            <SolidColorBrush Color="#60ffffff"
                             x:Key="ScrollBar.Static.Thumb" />
            <SolidColorBrush Color="#70ffffff"
                             x:Key="ScrollBar.MouseOver.Thumb" />
            <SolidColorBrush Color="#80ffffff"
                             x:Key="ScrollBar.Pressed.Thumb" />

            <Style TargetType="{x:Type RepeatButton}"
                   x:Key="ScrollBarButton">
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="1" />
                <Setter Property="Focusable"
                        Value="False" />
                <Setter Property="IsTabStop"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border x:Name="border"
                                    SnapsToDevicePixels="True"
                                    Background="{StaticResource ScrollBar.Static.Background}">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="{StaticResource ScrollBar.MouseOver.Background}" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="{StaticResource ScrollBar.Pressed.Background}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter TargetName="contentPresenter"
                                            Property="Opacity"
                                            Value="0.56" />
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="{StaticResource ScrollBar.Disabled.Background}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type RepeatButton}"
                   x:Key="RepeatButtonTransparent">
                <Setter Property="OverridesDefaultStyle"
                        Value="True" />
                <Setter Property="Background"
                        Value="#00FFFFFF" />
                <Setter Property="Focusable"
                        Value="False" />
                <Setter Property="IsTabStop"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}"
                                       Height="{TemplateBinding Height}"
                                       Width="{TemplateBinding Width}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Thumb}"
                   x:Key="ScrollBarThumbVertical">
                <Setter Property="OverridesDefaultStyle"
                        Value="True" />
                <Setter Property="IsTabStop"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border x:Name="rectangle"
                                    CornerRadius="3"
                                    Height="{TemplateBinding Height}"
                                    SnapsToDevicePixels="True"
                                    Width="{TemplateBinding Width}"
                                    Background="{StaticResource ScrollBar.Static.Thumb}" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="rectangle"
                                            Property="Background"
                                            Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                                </Trigger>
                                <Trigger Property="IsDragging"
                                         Value="True">
                                    <Setter TargetName="rectangle"
                                            Property="Background"
                                            Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Thumb}"
                   x:Key="ScrollBarThumbHorizontal">
                <Setter Property="OverridesDefaultStyle"
                        Value="True" />
                <Setter Property="IsTabStop"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border x:Name="rectangle"
                                    CornerRadius="3"
                                    Height="{TemplateBinding Height}"
                                    SnapsToDevicePixels="True"
                                    Width="{TemplateBinding Width}"
                                    Background="{StaticResource ScrollBar.Static.Thumb}" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="rectangle"
                                            Property="Background"
                                            Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                                </Trigger>
                                <Trigger Property="IsDragging"
                                         Value="True">
                                    <Setter TargetName="rectangle"
                                            Property="Background"
                                            Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ScrollBar}"
                   x:Key="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled"
                        Value="False" />
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="False" />
                <Setter Property="Background"
                        Value="{StaticResource ScrollBar.Static.Background}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
                <Setter Property="Width"
                        Value="8" />
                <Setter Property="MinWidth"
                        Value="8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg"
                                  SnapsToDevicePixels="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>
                                <Border Background="{TemplateBinding Background}"
                                        Grid.Row="0" />
                                <Track x:Name="PART_Track"
                                       IsDirectionReversed="True"
                                       IsEnabled="{TemplateBinding IsMouseOver}"
                                       Grid.Row="0">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="true"
                                                   Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                                        <Condition Value="true"
                                                   Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="true"
                                                   Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                                        <Condition Value="true"
                                                   Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="true"
                                                   Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                                        <Condition Value="false"
                                                   Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="true"
                                                   Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                                        <Condition Value="false"
                                                   Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled"
                                         Value="False" />
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation"
                             Value="Horizontal">
                        <Setter Property="Width"
                                Value="Auto" />
                        <Setter Property="MinWidth"
                                Value="0" />
                        <Setter Property="Height"
                                Value="8" />
                        <Setter Property="MinHeight"
                                Value="8" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg"
                                          SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="0.00001*" />
                                        </Grid.ColumnDefinitions>
                                        <Border Background="{TemplateBinding Background}"
                                                Grid.Column="0" />
                                        <Track x:Name="PART_Track"
                                               Grid.Column="0"
                                               IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                              Style="{StaticResource RepeatButtonTransparent}" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                              Style="{StaticResource RepeatButtonTransparent}" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="true"
                                                           Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                                                <Condition Value="true"
                                                           Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                                            </MultiDataTrigger.Conditions>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="true"
                                                           Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                                                <Condition Value="true"
                                                           Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                                            </MultiDataTrigger.Conditions>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="true"
                                                           Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                                                <Condition Value="false"
                                                           Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                                            </MultiDataTrigger.Conditions>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Value="true"
                                                           Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                                                <Condition Value="false"
                                                           Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                                            </MultiDataTrigger.Conditions>
                                        </MultiDataTrigger>
                                        <Trigger Property="IsEnabled"
                                                 Value="False" />
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ScrollViewer}"
                   x:Key="{x:Type ScrollViewer}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid"
                                  Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="Corner"
                                           Grid.Column="1"
                                           Grid.Row="1"
                                           Fill="{StaticResource ScrollBar.Static.Background}" />
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                                        CanHorizontallyScroll="False"
                                                        CanVerticallyScroll="False"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        Content="{TemplateBinding Content}"
                                                        Grid.Column="0"
                                                        Margin="{TemplateBinding Padding}"
                                                        Grid.Row="0" />
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                           AutomationProperties.AutomationId="VerticalScrollBar"
                                           Cursor="Arrow"
                                           Grid.Column="1"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           Minimum="0"
                                           Grid.Row="0"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                           AutomationProperties.AutomationId="HorizontalScrollBar"
                                           Cursor="Arrow"
                                           Grid.Column="0"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           Minimum="0"
                                           Orientation="Horizontal"
                                           Grid.Row="1"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->
            <!--#region Other Styles -->
            <SolidColorBrush Color="#00ffffff"
                             x:Key="Button.Static.Background" />
            <SolidColorBrush Color="#80969696"
                             x:Key="Button.MouseOver.Background" />
            <SolidColorBrush Color="#90e62345"
                             x:Key="Close.MouseOver.Background" />
            <SolidColorBrush Color="#80505050"
                             x:Key="Button.Pressed.Background" />
            <SolidColorBrush Color="#ff191919"
                             x:Key="Button.Disabled.Background" />
            <LinearGradientBrush x:Key="TabItem.MouseOver.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#ECF4FC"
                              Offset="0.0" />
                <GradientStop Color="#DCECFC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="TabItem.Selected.Background"
                             Color="#FFFFFF" />
            <SolidColorBrush Color="#191919"
                             x:Key="ListBox.Static.Background" />

            <Style TargetType="{x:Type Button}"
                   x:Key="CloseButton">
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="Background"
                        Value="{StaticResource Button.Static.Background}" />
                <Setter Property="Foreground"
                        Value="#FFFFFFFF" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True"
                                    CornerRadius="2">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="{StaticResource Close.MouseOver.Background}" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="{StaticResource Close.MouseOver.Background}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Button}"
                   x:Key="RoundButton">
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="Background"
                        Value="{StaticResource Button.Static.Background}" />
                <Setter Property="Foreground"
                        Value="#FFFFFFFF" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="6 1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True"
                                    CornerRadius="5">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="{StaticResource Button.MouseOver.Background}" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="{StaticResource Button.Pressed.Background}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="{StaticResource Button.Disabled.Background}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TabControl}"
                   x:Key="Tabs">
                <Setter Property="Padding"
                        Value="2" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Background"
                        Value="{StaticResource TabItem.Selected.Background}" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Foreground"
                        Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid x:Name="templateRoot"
                                  ClipToBounds="True"
                                  SnapsToDevicePixels="True"
                                  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1"
                                                      Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0"
                                                   Height="Auto" />
                                    <RowDefinition x:Name="RowDefinition1"
                                                   Height="*" />
                                </Grid.RowDefinitions>
                                <ScrollViewer x:Name="TabScrollViewer"
                                              VerticalScrollBarVisibility="Disabled"
                                              Background="#00FFFFFF"
                                              HorizontalScrollBarVisibility="Auto"
                                              ClipToBounds="True">
                                    <StackPanel Orientation="Horizontal">
                                        <TabPanel x:Name="headerPanel"
                                                  Background="#00FFFFFF"
                                                  IsItemsHost="True"
                                                  KeyboardNavigation.TabIndex="1"
                                                  Panel.ZIndex="1"
                                                  Margin="0 2 0 0" />
                                        <Button x:Name="AddTabButton"
                                                Width="15"
                                                Height="15"
                                                Margin="4"
                                                Padding="0"
                                                Style="{StaticResource RoundButton}">
                                            <Grid>
                                                <Path Stroke="#FFB9BBBE"
                                                      StrokeThickness="1"
                                                      Data="M0,4.5 L9,4.5" />
                                                <Path Stroke="#FFB9BBBE"
                                                      StrokeThickness="1"
                                                      Data="M4.5,0 L4.5,9" />
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                </ScrollViewer>
                                <Border x:Name="contentPanel"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Grid.Column="0"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        Grid.Row="1"
                                        KeyboardNavigation.TabIndex="2"
                                        KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                                      ContentSource="SelectedContent"
                                                      Margin="0,0,0,0"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TabItem}"
                   x:Key="Tab">
                <Setter Property="FontFamily"
                        Value="Segoe UI Variable Display" />
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="Foreground"
                        Value="#FFFFFFFF" />
                <Setter Property="Background"
                        Value="#00ffffff" />
                <Setter Property="Margin"
                        Value="1" />
                <Setter Property="Padding"
                        Value="8,6,8,6" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
                        Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="templateRoot"
                                  SnapsToDevicePixels="True"
                                  Background="{x:Null}">
                                <Border x:Name="mainBorder"
                                        BorderBrush="#262626"
                                        BorderThickness="0,0,0,0"
                                        Background="#26282828"
                                        Margin="0,0,3,2"
                                        CornerRadius="5,5,5,5" />
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="&#xE7C3;"
                                           Width="18"
                                           Foreground="#DDFFFFFF"
                                           FontFamily="Segoe MDL2 Assets"
                                           HorizontalContentAlignment="Right"
                                           VerticalContentAlignment="Center"
                                           FontSize="10"
                                           RenderTransformOrigin="0.5,0.5"
                                           Padding="0" />
                                    <ContentPresenter x:Name="contentPresenter"
                                                      ContentSource="Header"
                                                      Focusable="False"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                      VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                      Margin="5,8,10,8" />
                                    <Button x:Name="CloseButton"
                                            Margin="10,8,8,8"
                                            Padding="0"
                                            Height="14"
                                            Width="14"
                                            FontSize="8"
                                            FontFamily="Segoe MDL2 Assets"
                                            Content="&#xE711;"
                                            Style="{StaticResource RoundButton}" />
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="true"
                                                   Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="mainBorder"
                                            Property="Background"
                                            Value="#1f1f1f" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="false"
                                                   Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                        <Condition Value="Top"
                                                   Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex"
                                            Value="1" />
                                    <Setter TargetName="mainBorder"
                                            Property="Background"
                                            Value="#262626" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="true"
                                                   Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                        <Condition Value="Top"
                                                   Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex"
                                            Value="1" />
                                    <Setter TargetName="mainBorder"
                                            Property="Background"
                                            Value="#434343" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Button}"
                   x:Key="ModdedTabButton">
                <Setter Property="Background"
                        Value="#d82242" />
                <Setter Property="Foreground"
                        Value="White" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="3 3 0 0"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="true">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="#404040"
                                                    Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                    FillBehavior="HoldEnd"
                                                    Duration="0:0:0.25"
                                                    AutoReverse="False"
                                                    RepeatBehavior="1x" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>

                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                    FillBehavior="HoldEnd"
                                                    Duration="0:0:0.25"
                                                    AutoReverse="False"
                                                    RepeatBehavior="1x" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TextBox}"
                   x:Key="InvisibleTextBox">
                <Setter Property="Background"
                        Value="#00FFFFFF" />
                <Setter Property="BorderBrush"
                        Value="#00FFFFFF" />
                <Setter Property="ContextMenu"
                        Value="{x:Null}" />
                <Setter Property="CaretBrush"
                        Value="#FFFFFFFF" />
                <Setter Property="Foreground"
                        Value="#FFFFFFFF" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="KeyboardNavigation.TabNavigation"
                        Value="None" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Left" />
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="AllowDrop"
                        Value="True" />
                <Setter Property="ScrollViewer.PanningMode"
                        Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="False" />
                <Setter Property="Padding"
                        Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled"
                                       Value="True" />
                            <Condition Property="IsSelectionActive"
                                       Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush"
                                Value="{DynamicResource SystemColors.InactiveSelectionHighlightBrushKey}" />
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <!--#endregion-->
            <!--#region Settings Tab Style-->
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                                       SnapsToDevicePixels="true"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeThickness="1"
                                       StrokeDashArray="1 2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="TabItem.Static.Border"
                             Color="#00ffffff" />
            <SolidColorBrush x:Key="TabItem.MouseOver.Border"
                             Color="#00ffffff" />
            <SolidColorBrush x:Key="TabItem.Disabled.Background"
                             Color="#00ffffff" />
            <SolidColorBrush x:Key="TabItem.Disabled.Border"
                             Color="#00ffffff" />
            <SolidColorBrush x:Key="TabItem.Selected.Border"
                             Color="#00ffffff" />
            <Style x:Key="TabItemStyle1"
                   TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource FocusVisual}" />
                <Setter Property="Foreground"
                        Value="Black" />
                <Setter Property="Background"
                        Value="#00ffffff" />
                <Setter Property="BorderBrush"
                        Value="#00ffffff" />
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="Padding"
                        Value="0" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
                        Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="templateRoot"
                                  SnapsToDevicePixels="true">
                                <Border x:Name="mainBorder"
                                        Margin="0">
                                    <Border x:Name="innerBorder"
                                            BorderThickness="0"
                                            Background="#FF323232"
                                            Margin="0"
                                            Opacity="0"
                                            CornerRadius="2" />
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentSource="Header"
                                                  Focusable="False"
                                                  Margin="0"
                                                  RecognizesAccessKey="True"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center" />
                            </Grid>
                            <ControlTemplate.Triggers>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Top" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="mainBorder"
                                            Value="#00ffffff" />
                                    <Setter Property="BorderBrush"
                                            TargetName="mainBorder"
                                            Value="#00ffffff" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="0" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="0" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Top" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity"
                                            TargetName="contentPresenter"
                                            Value="0.56" />
                                    <Setter Property="Background"
                                            TargetName="mainBorder"
                                            Value="#00ffffff" />
                                    <Setter Property="BorderBrush"
                                            TargetName="mainBorder"
                                            Value="#00ffffff" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="0" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="0" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Top" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="0" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="0" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Top" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex"
                                            Value="1" />
                                    <Setter Property="Margin"
                                            Value="-2,-2,-2,0" />
                                    <Setter Property="Opacity"
                                            TargetName="innerBorder"
                                            Value="1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="0" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="0" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TextBox}"
                   BasedOn="{StaticResource {x:Type TextBox}}"
                   x:Key="placeHolder">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <TextBox Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                         x:Name="textSource"
                                         Foreground="{TemplateBinding Foreground}"
                                         Background="Transparent"
                                         Panel.ZIndex="2"
                                         BorderThickness="0"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Padding="{TemplateBinding Padding}">

                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}" />
                                    </TextBox.Resources>
                                </TextBox>
                                <TextBox Text="{TemplateBinding Tag}"
                                         Background="{TemplateBinding Background}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Padding="{TemplateBinding Padding}">
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}" />
                                    </TextBox.Resources>
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Foreground"
                                                    Value="Transparent" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, Source={x:Reference textSource}}"
                                                             Value="">
                                                    <Setter Property="Foreground"
                                                            Value="LightGray" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>